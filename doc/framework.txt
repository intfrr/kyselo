// čtení z DB
$rows->getOne($table, $where)
$rows->count($table, $where)
$rows->getMore($table, $where, $order)
$rows->getPage($table, $where, $order, $pageNo, $perPage)
$total = $rows->pageCount; // vyplněno po volání getPage, jinak obsahuje -1

// úpravy DB
$rows->insert($table, $data)
$rows->update($table, $data, $where)
$rows->delete($table, $where)

// definice formuláře
$form = new form($action, $url)
$form->field($name, $attr)
$form->check($name, $callback($field, $other), $message)

// použití formuláře
$form->fill($data)
$form->validate()

// vypsání formuláře
echo $form

// stav formuláře
$form->isValid
$form->errors
$form->values
$form->fields

// použití formuláře s DB:

$form->fill($_POST)

if ($form->validate()) {
	$db->insert('table', $form->values)
	// redirect
}

echo $form; // ukázat form + případné chyby

// pokročilé vykreslení formuláře:

$F = new severak\forms\html($form);
echo $F->open(['class'=>'turbo-form']);
echo '<table>'
foreach ($F->fields as $fieldName) {
	echo '<tr><td>';
	echo $F->label($fieldName);
	echo '</td><td>';
	echo $F->field($fieldName, ['class'=>'in-table'])
	if (!empty($form->errors[$fieldName])) {
		echo 'chyba - '  . $form->errors[$fieldName];
	}
	echo '</td></tr>';
}
echo '</table>';
echo $F->close();


// použití reCatchpy:

$captcha = new severak\forms\recaptcha($key);

$form = new severak\forms\form;
$form->field('text', ['type'=>'spam']);
$captcha->attach($form);
$form->field('submit', ['type'=>'submit'])

---

SESSION modul jen zabezpečuje ukládání/odesílání SESSION, implementaci přihlášení/košíku/flash messages whatever necháváme na programátorovi.
